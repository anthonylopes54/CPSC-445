{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh12860\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 > library(dplyr)\
> library(Seurat)\
> library(patchwork)\
\
## Read in Colon Epithelial data\
> CO_EPI.data <- Read10X(data.dir = "/Users/sunhochung/Desktop/445-project/CO_EPI")\
> CO_EPI <- CreateSeuratObject(counts = CO_EPI.data, project = "CO_EPI", min.cells = 3, min.features = 200)\
\
## Split dataset into healthy, inflamed, and non-inflamed groups\
> barcodes <- colnames(CO_EPI)\
> assign_condition <- function(barcode) \{ if (startsWith(barcode, "H")) \{ return("Healthy") \} else if (startsWith(barcode, "N")) \{ return("Non-Inflamed") \} else if (startsWith(barcode, "I")) \{ return("Inflamed") \} else \{ return("Unknown") \}\}\
\
> conditions <- sapply(barcodes, assign_condition)\
> CO_EPI[[\'93tissue_condition\'94]] <- conditions\
\
> split_seurat_objects <- SplitObject(CO_EPI, split.by = \'93tissue_condition\'94)\
\
## Split the object by using the new groups\
> healthy_object <- split_seurat_objects[["Healthy"]]\
> non_inflamed_object <- split_seurat_objects[["Non-Inflamed"]]\
> inflamed_object <- split_seurat_objects[["Inflamed\'94]]\
\
> healthy_object\
> non_inflamed_object\
> inflamed_object\
\
## Determine percent mtDNA and visualize\
> healthy_object[["percent.mt"]] <- PercentageFeatureSet(healthy_object, pattern = "^MT-")\
> VlnPlot(healthy_object, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)\
\
## Normalize the data\
> healthy_object <- NormalizeData(healthy_object)\
\
## Find the most variable genes and visualize\
> healthy_object <- FindVariableFeatures(healthy_object, selection.method = "vst", nfeatures = 2000)\
> top10 <- head(VariableFeatures(healthy_object), 10)\
> top10\
\
> plot1 <- VariableFeaturePlot(healthy_object)\
> plot2 <- LabelPoints(plot = plot1, points = top10, repel = TRUE)\
> plot1 + plot2\
\
## Scale the data\
> all.genes <- rownames(healthy_object)\
> healthy_object <- ScaleData(healthy_object, features = all.genes)\
\
## Run PCA\
> healthy_object <- RunPCA(healthy_object, features = VariableFeatures(object = healthy_object))\
> print(healthy_object[["pca"]], dims = 1:5, nfeatures = 5)\
> DimPlot(healthy_object, reduction = "pca")\
\
## Find clusters\
> healthy_object <- FindNeighbors(healthy_object, dims = 1:10)\
> healthy_object <- FindClusters(healthy_object, resolution = 0.5)\
\
> head(Idents(healthy_object), 5)\
\
## Run UMAP\
> healthy_object <- RunUMAP(healthy_object, dims = 1:10)\
> DimPlot(healthy_object, reduction = "umap")\
\
## Find markers in each cluster\
> cluster1.markers <- FindMarkers(healthy_object, ident.1 = 1, min.pct = 0.25)\
> head(cluster1.markers, 15)\
\
> cluster2.markers <- FindMarkers(healthy_object, ident.1 = 2, min.pct = 0.25)\
> head(cluster2.markers, 15)\
}